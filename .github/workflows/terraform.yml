name: s3-ec2-infra

on:
  push:
    branch: "infra"
  pull_request:
    branch: "infra"

jobs:
  terraformS3:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Terraform Init
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
          cd Terraform
          cd s3
          terraform init
      - name: Terraform Plan
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
          cd Terraform
          cd s3
          terraform plan
      - name: Terraform Apply
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
          cd Terraform
          cd s3
          terraform apply -auto-approve
  terraformEC2:
    runs-on: ubuntu-latest

    defaults:
      run:
        shell: bash

    outputs:
      public_ip: ${{steps.ip_address.outputs.ip}}

    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Terraform Init
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
          cd Terraform
          cd ec2
          terraform init
      - name: Terraform Plan
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
          cd Terraform
          cd ec2
          terraform plan
      - name: Terraform Apply
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
          cd Terraform
          cd ec2
          terraform apply -auto-approve
      - name: Create file to store IP Address
        id: ip_address
        run: |
          cd Terraform
          cd ec2
          touch ipAddress.txt
          echo $(terraform output instance_public_ip | sed 's/^.//;s/.$//') >> ipAddress.txt
      - name: Print IP address from file
        run: |
           cd Terraform
           cd ec2
           cat ipAddress.txt
  moveFileToS3:
    runs-on: ubuntu-latest
    steps:
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
      - name: Move ipAddress file to S3 bucket
        run: |
          cd Terraform
          cd ec2
          cat ipAdress.txt
          aws s3 mv ipAddress.txt s3://akanksha-tf-gurukul