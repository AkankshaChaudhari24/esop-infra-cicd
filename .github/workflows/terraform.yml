name: s3-ec2-infra

on:
  push:
    branch: "infra"
  pull_request:
    branch: "infra"

jobs:
  terraformS3:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Install Terraform
        run: |
          wget -O- https://apt.releases.hashicorp.com/gpg | gpg --dearmor | sudo tee /usr/share/keyrings/hashicorp-archive-keyring.gpg
          echo "deb [signed-by=/usr/share/keyrings/hashicorp-archive-keyring.gpg] https://apt.releases.hashicorp.com $(lsb_release -cs) main" | sudo tee /etc/apt/sources.list.d/hashicorp.list
          sudo apt update && sudo apt install terraform
      - name: Terraform Init
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
          cd Terraform
          cd s3
          terraform init
      - name: Terraform Plan
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
          cd Terraform
          cd s3
          terraform plan
      - name: Terraform Apply
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
          cd Terraform
          cd s3
          terraform apply -auto-approve
  terraformEC2:
    runs-on: ubuntu-latest

    defaults:
      run:
        shell: bash

    outputs:
      public_ip: ${{steps.ip_address.outputs.ip}}

    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Install Terraform
        run: |
          wget -O- https://apt.releases.hashicorp.com/gpg | gpg --dearmor | sudo tee /usr/share/keyrings/hashicorp-archive-keyring.gpg
          echo "deb [signed-by=/usr/share/keyrings/hashicorp-archive-keyring.gpg] https://apt.releases.hashicorp.com $(lsb_release -cs) main" | sudo tee /etc/apt/sources.list.d/hashicorp.list
          sudo apt update && sudo apt install terraform
      - name: Terraform Init
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
          cd Terraform
          cd ec2
          terraform init
      - name: Terraform Plan
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
          cd Terraform
          cd ec2
          terraform plan
      - name: Terraform Apply
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
          cd Terraform
          cd ec2
          terraform apply -auto-approve
      - name: Create file to store IP Address
        id: ip_address
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
          cd Terraform
          cd ec2
          touch ipAddress.txt
          echo $(terraform output instance_public_ip | sed 's/^.//;s/.$//') >> ipAddress.txt
      - name: Print IP address from file
        run: |
           cd Terraform
           cd ec2
           cat ipAddress.txt
      - name: Copy ipAddress file to artifacts
        uses: actions/upload-artifact@v3
        with:
          name: ipAddress
          path: Terraform/ec2/ipAddress.txt
      - name: Download ipAddress.txt file
        uses: actions/download-artifact@v3
        with:
          name: ipAddress
      - name: Print content of file from artifact
        run: |
          cat ipAddress.txt
  cicd:
      needs: "terraformEC2"
      uses: AkankshaChaudhari24/esop-infra-cicd/.github/workflows/terraform.yml@cicd
      secrets:
        SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
