name: test-build-deploy
on:
  push:
    branch: "main"
  pull_request:
    branch: "main"
  workflow_call:
    secrets:
      SSH_PRIVATE_KEY:
        required: true
jobs:
  test-build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup java
        uses: actions/setup-java@v3
        with:
          distribution: corretto
          java-version: 17
      - name: Test
        run: ./gradlew test
      - name: Build
        run: ./gradlew build -x test
      - name: Copy jar file to artifacts
        uses: actions/upload-artifact@v3
        with:
           name: esop-trading-1.0
           path: build/libs/esop-0.1-all.jar

  deploy:
    needs:  "test-build"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Download jar file
        uses: actions/download-artifact@v3
        with:
          name: esop-trading-1.0
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
      - name: Copy ipAddress file from s3 bucket to local
        run: |
          aws s3 mv s3://akanksha-tf-gurukul/ipAddress.txt ./
      - name: Store ipAddress in output
        id: ip_address
        run : |
          echo IPAddress=$(cat ipAddress.txt) >>$GITHUB_OUTPUT
      - name: SSH into the instance
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          SSH_HOST: ${{steps.ip_address.outputs.IPAddress}}
        run: |
          eval `ssh-agent`
          echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add - > /dev/null
          echo "$SSH_HOST"
          ssh-add - <<< "${SSH_PRIVATE_KEY}"
          scp -o StrictHostKeyChecking=no "deploy.sh" ec2-user@$SSH_HOST:~
          scp -o StrictHostKeyChecking=no "esop-0.1-all.jar" ec2-user@$SSH_HOST:~
          ssh -o StrictHostKeyChecking=no ec2-user@$SSH_HOST -t "nohup sudo yum install java-17-amazon-corretto-headless -y"
          ssh -o StrictHostKeyChecking=no ec2-user@$SSH_HOST -t "nohup sudo sh deploy.sh"